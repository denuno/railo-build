<project name="glassfish" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<property name="server.deploy.dir" location="${glassfish.dir}/webapps"/>
	<property name="server.log.dir" value="${glassfish.dir}/logs/"/>
	<property name="server.host" value="localhost"/>
	<property name="server.port" value="8080"/>
	<property name="server.port.http" value="8080"/>
	<property name="server.port.ajp" value="8009"/>
	<property name="server.maxmemory" value="256M"/>

	<property name="glassfish.version.major" value="3" />
	<property name="glassfish.version.minor" value="0.1" />
	<property name="glassfish.version" value="${glassfish.version.major}.${glassfish.version.minor}" />
	<property name="glassfish.host" value="${server.host}"/>
	<property name="ext.glassfish.dir" location="${ext.dir}/glassfish/${glassfish.version}" />
	<property name="ext.glassfish.zip.uri" value="http://download.java.net/glassfish/${glassfish.version}/release/glassfish-${glassfish.version}.zip" />
	<property name="ext.glassfish.zip" location="${ext.glassfish.dir}/glassfish-${glassfish.version}.zip" />
	<property name="glassfish.dir" location="${temp.dir}/server/glassfish-${glassfish.version}" />
	<property name="glassfish.host" value="${server.host}"/>
	<property name="glassfish.port.http" value="${server.port.http}"/>
	<property name="glassfish.port.ajp" value="${server.port.ajp}"/>
	<property name="glassfish.deploy.dir" value="${server.deploy.dir}"/>
	<property name="glassfish.server.log.dir" value="${server.log.dir}"/>

	<property name="glassfish.manager.url"   value="http://${glassfish.host}:${server.port.http}/manager"/>
    <property name="glassfish.manager.username" value="admin"/>
    <property name="glassfish.manager.password" value="${cfadmin.password}"/>
	<property name="war.target.dir.absolute" location="${war.target.dir}" />
	<antcontrib:var name="tomcat.host.exists" unset="true"/>


	<antcontrib:if>
		<equals arg1="1" arg2="1" />
		<then>
			<path id="glassfish.ant.lib.path">
				<fileset dir="${cfdistro.basedir}/ext/containers/glassfish/lib">
					<include name="*.jar" />
				</fileset>
			</path>
		</then>
	</antcontrib:if>
	
	<target name="glassfish.uninstall" depends="glassfish.stop">
		<delete dir="${glassfish.dir}" />
	</target>

	<target name="glassfish.server.log.dir">
		<property name="server.log.dir" value="${glassfish.server.log.dir}"/>
	</target>

	<target name="glassfish.install">
		<mkdir dir="${ext.glassfish.dir}"/>
		<sequential>
		<antcontrib:if>
			<available file="${glassfish.dir}" />
			<then>
			<echo message="server dir ${glassfish.dir} already exists, not installing!  Remove with: ant server.uninstall"/> 
			</then>
			<else>
				<antcontrib:if>
					<available file="${ext.glassfish.zip}" />
					<then/>
					<else>
						<get src="${ext.glassfish.zip.uri}" dest="${ext.glassfish.zip}" verbose="true" ignoreerrors="false" />
					</else>
				</antcontrib:if>
				<unzip src="${ext.glassfish.zip}"						
				       dest="${glassfish.dir}">
					<regexpmapper from="glassfishv${glassfish.version.major}/(.*)$" to="\1"/>
				</unzip>
			</else>
		</antcontrib:if>
		<antcontrib:runtarget target="glassfish.configure" />
		</sequential>
	</target>

	<target name="glassfish.configure">
		<glassfish-asadmin command="start-domain domain1" />
		<glassfish-asadmin command="create-jvm-options -Xms256m:-Xmx${server.maxmemory}:-XX\:MaxPermSize=128m:-XX\:+UseParallelGC" />

		<glassfish-asadmin command="create-virtual-server --hosts ${server.host} ${distro.name}" />
		<glassfish-asadmin command="create-http-listener --listeneraddress ${glassfish.host} --listenerport ${glassfish.port.http} --defaultvs ${distro.name} ${distro.name}-listener" />
<!--
		<echo message="export JAVA_OPTS=-Xms256m -Xmx${server.maxmemory} -XX:MaxPermSize=128m -XX:+UseParallelGC"
			file="${glassfish.dir}/bin/setenv.sh"/>
		<chmod dir="${glassfish.dir}/bin" perm="ugo+rx" 
		       includes="**/*.sh"/>
		<xmltask source="${glassfish.dir}/conf/glassfish-users.xml" dest="${glassfish.dir}/conf/glassfish-users.xml">
				<insert path="glassfish-users" position="under">
					<![CDATA[
					<role rolename="manager"/>
					<user username="admin" password="${cfadmin.password}" roles="manager"/>
					]]>
				</insert>
		</xmltask>
		<property name="war.target.dir.absolute" location="${war.target.dir}" />
		<antcontrib:var name="glassfish.host.exists" unset="true"/>
		<xmltask source="${glassfish.dir}/conf/server.xml" dest="${glassfish.dir}/conf/server.xml">
			<replace path="Server/Service/Connector[@protocol='HTTP/1.1']/@port" withText="${glassfish.port.http}"/>
			<replace path="Server/Service/Connector[@protocol='AJP/1.3']/@port" withText="${glassfish.port.ajp}"/>
			<copy path="Server/Service/Engine/Host[@name='${glassfish.host}']/@name" attrValue="true" property="glassfish.host.exists"/>
			<print path="Server/Service/Engine/Host[@name='${glassfish.host}']/@name"/>
			<replace path="Server/Service/Engine/Host[@name='${glassfish.host}']" if="glassfish.host.exists">
			<![CDATA[
	<Host appBase="${war.target.dir.absolute}" autoDeploy="true" name="${glassfish.host}" unpackWARs="true" xmlNamespaceAware="false" xmlValidation="false">
		<Context path="${war.contextpath}" docBase="./"/>
	</Host>
			]]>
			</replace>
			<insert path="Server/Service/Engine" position="under" unless="glassfish.host.exists">
			<![CDATA[
	<Host appBase="${war.target.dir.absolute}" autoDeploy="true" name="${glassfish.host}" unpackWARs="true" xmlNamespaceAware="false" xmlValidation="false">
		<Context path="${war.contextpath}" docBase="./"/>
	</Host>
			]]>
			</insert>
		</xmltask>
		<fixcrlf srcdir="${glassfish.dir}/conf" includes="**/*.xml" eol="crlf" />
		   -->
		<echo message="${glassfish.deploy.dir}"/>
		<echo message="${server.deploy.dir}"/>
	</target>

	<target name="glassfish.start" depends="glassfish.install">
		<echoproperties prefix="glassfish"/>
		<echo message="starting glassfish"/>
		<property name="background" value="true"/>
		<sequential>
			<glassfish-asadmin command="start-domain domain1" />
			<waitfor maxwait="21" maxwaitunit="second" checkevery="7" checkeveryunit="second" timeoutproperty="toolong">
				<and>
					<socket server="${glassfish.host}" port="${glassfish.port.http}" />
					<!--
					<http url="http://127.0.0.1:${runwar.port}/" />
					<http url="http://127.0.0.1:${runwar.port}/${runwar.war.contextpath}build.cfc" />
					-->
				</and>
			</waitfor>
			<sleep seconds="5" />
			<antcontrib:runtarget target="if.toolong.echo" />
			<echo message="stop glassfish by typing: ant glassfish.stop"/>
		</sequential>
	</target>	

	<target name="glassfish.stop">
		<glassfish-asadmin command="stop-domain domain1" />
		<sleep seconds="7"/>
		<kill-java name="ASMain" jps="${jps.executable}" />
	</target>	

	<target name="deploy.glassfish" depends="glassfish.install">
		<copy todir="${glassfish.deploy.dir}/${war.name}" overwrite="true">
			<fileset dir="${war.target.dir}"/>
		</copy>
	</target>	

    <!-- uses settings from deploy.xml stuff -->
    <target name="glassfish.deploy" description="Install application to servlet container">
		<glassfish-asadmin command="deploy --virtualservers ${distro.name} --contextroot &quot;${war.contextpath}&quot; --name ${distro.name} ${war.target.dir.absolute}" />
    </target>
	
    <!-- uses settings from deploy.xml stuff -->
    <target name="glassfish.war.list" description="Install application to servlet container">
		<glassfish-ant action="list"/>
    </target>

	<!-- uses settings from deploy.xml stuff -->
    <target name="war.deploy" description="Install application to servlet container">
		<requires-ext resource="/ext/containers/glassfish/" />
		<antcontrib:runtarget target="check.creds" />
    	<sshsession host="${deploy.remote.host}"
    	    localtunnels="8080:localhost:8080"
			username="${deploy.remote.user}"
			passphrase="${deploy.remote.keyfile.pass}"
    		keyfile="${deploy.remote.keyfile}" trust="true" port="${deploy.remote.host.port}">
    	    <sequential>
    			<glassfish-ant action="deploy"/>
    	    </sequential>
    	</sshsession>
    </target>

	<target name="war.list" description="List installed applications on servlet container">
		<requires-ext resource="/ext/containers/glassfish/" />
		<antcontrib:runtarget target="check.creds" />
    	<sshsession host="${deploy.remote.host}"
    	    localtunnels="8080:localhost:8080"
			username="${deploy.remote.user}"
			passphrase="${deploy.remote.keyfile.pass}"
			keyfile="${deploy.remote.keyfile}" trust="true" port="${deploy.remote.host.port}">
    	    <sequential>
    			<glassfish-ant action="list"/>
    	    </sequential>
    	</sshsession>
    </target>

	<target name="war.reload" description="Reload application on servlet container">
		<requires-ext resource="/ext/containers/glassfish/" />
    	<reload url="${glassfish.manager.url}"
			username="${glassfish.manager.username}"
			password="${glassfish.manager.password}"
			path="${app.path}"/>
    </target>
    <target name="war.remove" description="Remove application on servlet container">
		<requires-ext resource="/ext/containers/glassfish/" />
    	<undeploy url="${glassfish.manager.url}"
			username="${glassfish.manager.username}"
			password="${glassfish.manager.password}"
			path="${app.path}"/>
    </target>

	<macrodef name="glassfish-asadmin"
	          description="runs asadmin commands">
	 	<attribute name="command"/>
		 <sequential>
		 	<echo message="asadmin @{command}"/>
			<exec dir="${glassfish.dir}/glassfish/bin" osfamily="unix"
	        	executable="sh" failonerror="false">
	            <arg line="${glassfish.dir}/glassfish/bin/asadmin @{command}"/>
	        </exec>		 	
		 </sequential>
	</macrodef>
	
</project>