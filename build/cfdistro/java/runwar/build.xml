<project name="runwar" default="runwar.compile" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<dirname property="runwar.basedir" file="${ant.file.runwar}" />

	<macrodef name="runwar.initprops">
		<sequential>
			<dirname property="runwar.basedir" file="${ant.file.runwar}" />
			<property name="war.name" value="runwar" />
			<property name="build.sysclasspath" value="last" />
			
			<property name="server.deploy.dir" value="${war.target.dir}/../"/>
			<property name="server.log.dir" value="${log.dir}"/>
			<property name="server.port" value="8088"/>
			<property name="server.port.http" value="${server.port}"/>
			<property name="server.port.ajp" value="8009"/>
			<property name="server.url" value="http://127.0.0.1:${server.port.http}${war.contextpath}/index.cfm"/>
			<property name="server.memory.max" value="256M"/>
			<property name="server.host.max" value="256M"/>

			<property name="runwar.war.path" location="${war.target.dir}" />
			<property name="runwar.war.contextpath" value="${war.contextpath}" />
			<property name="runwar.port" value="${server.port.http}" />
			<property name="runwar.host" value="${server.host}" />
			<property name="runwar.maxmemory" value="${server.memory.max}" />
			<property name="runwar.log.dir" location="${server.log.dir}" />
			<property name="runwar.stop.socket" value="8079" />
			<property name="runwar.cfml.dirlist" value="${src.dir}" />
			<property name="open.url" value="${server.url}" />
			<fix-url-slashes property="open.url" />
			<property name="runner.temp.dir" value="${temp.dir}/runner" />
			<property name="runner.jar" value="${runner.temp.dir}/${war.name}.jar" />

			<property name="distro.name" value="${distro.name}" />
			<property name="company.name" value="CFML Proponents" />
			<property name="product.name.short" value="${distro.name}" />
			<property name="product.name.long" value="${distro.name}" />
			<property name="product.version" value="0.0.1.1" />
			<property name="product.version.txt" value="0.0.1.1" />
			<antcontrib:if>
				<equals arg1="${default.cfengine}" arg2="acf" />
				<then>
					<path id="runwar.lib.path">
						<fileset dir="${cfdistro.basedir}/lib">
							<include name="*.jar" />
						</fileset>
						<fileset dir="${war.target.dir}/WEB-INF/cfusion/lib">
							<include name="*.jar" />
						</fileset>
					</path>
				</then>
				<else>
					<path id="runwar.lib.path">
						<fileset dir="${cfdistro.basedir}/lib">
							<include name="*.jar" />
						</fileset>
						<fileset dir="${war.target.dir}/WEB-INF/lib">
							<include name="*.jar" />
						</fileset>
					</path>
				</else>
			</antcontrib:if>

		</sequential>
	</macrodef>
	<runwar.initprops />

	<target name="runwar.compile">
		<runwar.initprops />
		<delete dir="${runwar.basedir}/bin/runwar/"/>
		<mkdir dir="${runwar.basedir}/bin/runwar/"/>
		<!--
		<javac srcdir="${runwar.basedir}/src/runwar" destdir="${runwar.basedir}/bin/runwar"
    		classpathref="runwar.lib.path"/>
    	-->
		<javac-ecj srcdir="${runwar.basedir}/src/runwar" destdir="${runwar.basedir}/bin/runwar"
			classpath="${toString:runwar.lib.path}"/>
		    		
	</target>

	<target name="runwar.jar" depends="runwar.compile">
		<runwar.initprops />
		<jar destfile="${cfdistro.basedir}/lib/runwar.jar"
         basedir="${runwar.basedir}/bin/runwar/" 
         includes="**/*.class"
         />
		<delete dir="${runwar.basedir}/bin"/>
	</target>

	<target name="runembedded.jar" depends="runwar.compile" description="creates an jar with the WAR embedded">
		<delete dir="${dist.dir}/embedded"/>
		<mkdir dir="${dist.dir}/embedded"/>
		<echo file="${dist.dir}/embedded/runwar.properties" message="war.name=${war.name}"/>
		<jar destfile="${dist.dir}/embedded/${war.name}.jar" filesetmanifest="mergewithoutmain">
			<manifest>
				<attribute name="Main-Class" value="runwar.RunEmbeddedWar" />
				<attribute name="Class-Path" value="./${jetty-runner.jar}" />
			</manifest>
			<fileset dir="${cfdistro.basedir}/lib/" includes="${jetty-runner.jar}" />
			<fileset dir="${dist.dir}/compressed/" />
			<fileset dir="${dist.dir}/embedded/" />
			<fileset dir="${runwar.basedir}/bin/runwar" />
		</jar>
	</target>
	
	
	<target name="if.toolong.echo" if="toolong">
		<loadfile property="errlog"
		      srcFile="${runwar.log.dir}/runner.log.txt" failonerror="false"/>
		<echo message="${errlog}" />
	</target>

	<target name="runwar.start.fg" description="starts jetty-runner server in foreground">
		<runwar.initprops />
		<antcontrib:var name="runwar.background" value="false" />
		<antcontrib:runtarget target="runwar.start" />
	</target>

	<target name="runwar.start" depends="runwar.jar" description="starts jetty-runner server">
		<runwar.initprops />
		<echoproperties prefix="runwar"/>
		<property name="background" value="true" />
		<property name="runwar.background" value="${background}" />
		<property name="runwar.openbrowser" value="false" />
		<echo message="starting jetty-runner"/>
		<sequential>
			<path id="cfdistro.libs.path">
				<fileset dir="${cfdistro.basedir}/lib">
					<include name="*.jar" />
				</fileset>
			</path>
			<java classname="runwar.Start" classpathref="cfdistro.libs.path" fork="true" spawn="${runwar.background}" maxmemory="${runwar.maxmemory}">
				<jvmarg line="${server.jvm.args}"/>
				<arg value="${runwar.war.path}" />
				<arg value="${runwar.war.contextpath}" />
				<arg value="${runwar.host}" />
				<arg value="${runwar.port}" />
				<arg value="${runwar.stop.socket}" />
				<arg value="${runwar.log.dir}" />
				<arg value="${runwar.cfml.dirlist}" />
				<arg value="${runwar.background}" />
				<arg value="${runwar.openbrowser}" />
				<!--
				<jvmarg value="-Djetty.logs=${runwar.log.dir}" />
				<jvmarg value="-Dorg.eclipse.jetty.util.log.DEBUG=true" />
				<jvmarg value="-Xdebug"/>
				-->
			</java>
			<echo message="waiting for jetty-runner"/>
			<sleep seconds="7" />
			<waitfor maxwait="21" maxwaitunit="second" checkevery="7" checkeveryunit="second" timeoutproperty="toolong">
				<and>
					<socket server="${runwar.host}" port="${runwar.port}" />
					<!--
					<http url="http://127.0.0.1:${runwar.port}/" />
					<http url="http://127.0.0.1:${runwar.port}/${runwar.war.contextpath}build.cfc" />
					-->
				</and>
			</waitfor>
			<antcontrib:runtarget target="if.toolong.echo" />
			<echo message="stop server by typing: ant ${server.type}.stop"/>
		</sequential>
	</target>
	
	<target name="runwar.stop" description="stops jetty-runner server">
		<runwar.initprops />
		<echo message="stopping jetty-runner.  peace out bro!"/>
		<java classname="runwar.Stop" classpathref="runwar.lib.path">
			<arg value="${runwar.stop.socket}" />
		</java>
	</target>

	<target name="server.openUrl" description="launches a browser pointing at ${open.url}">
		<runwar.initprops />
		<open-url url="${open.url}" />			
	</target>

	<target name="build.war.runner" description="creates an runnable jar with the WAR embedded">
		<delete file="${war.target.dir}"/>
		<antcontrib:runtarget target="build.war.src" />
		<antcontrib:runtarget target="runwar.start.stop" />
		<antcontrib:runtarget target="jar.war" />
		<fix-url-slashes property="open.url" />
		<requires-ext resource="${ext.dir}/ant-lib" />
		<requires-ext resource="${ext.dir}/launch4j" />
		<requires-ext resource="${ext.dir}/izpack" />
		<copy file="${cfdistro.basedir}/lib/${jetty-runner.jar}" tofile="${runner.jar}" overwrite="true" />
		<copy file="${war.target.dir}" todir="${runner.temp.dir}" />
		<!--
		<copy todir="${runner.temp.dir}/${war.name}.war">
			<fileset dir="${war.target.dir}" />
		 </copy>
		 -->
		<javac srcdir="${runwar.basedir}/src/runwar" includes="RunEmbeddedWar.java,BrowserOpener.java" destdir="${runner.temp.dir}" classpathref="build.lib.path" />
		<echo file="${runner.temp.dir}/runwar.properties" message="war.name=${war.name}${line.separator}open.url=${open.url}${line.separator}runwar.port=${runwar.port}" />
		<jar jarfile="${runner.jar}" basedir="${runner.temp.dir}" excludes="*.jar,*.ra" update="true">
			<manifest>
				<attribute name="Main-Class" value="runwar.RunEmbeddedWar" />
			</manifest>
		</jar>
<!--
		<taskdef name="pack200" classname="com.sun.tools.apache.ant.pack200.Pack200Task" classpathref="build.lib.path"/>		
 <echo file="${runner.jar}.conf" append="false">
com.sun.java.util.jar.pack.verbose=0
com.sun.java.util.jar.pack.package.majver=150
com.sun.java.util.jar.pack.package.minver=7
pack.effort=9
pack.segment.limit=-1
 </echo>
		 <pack200 configfile="${runner.jar}.conf" src="${runner.jar}" destfile="${runner.jar}.tmp1.jar" repack="true"/>
		 <signjar jar="${runner.jar}.tmp1.jar" alias="${alias}" storepass="${password}" keystore="${keystore}"/>
		 <pack200 stripdebug="true" configfile="${runner.jar}.conf" src="${runner.jar}.tmp1.jar" destfile="${runner.jar}.tmp2.jar" repack="true"/>
		 <signjar jar="${runner.jar}.tmp2.jar" alias="${alias}" storepass="${password}" keystore="${keystore}"/>
		 <pack200 stripdebug="true" configfile="${runner.jar}.conf" gzipoutput="true" src="${runner.jar}.tmp2.jar" destfile="${runner.jar}.pack.gz"/>
		 <delete quiet="true" file="${runner.jar}.tmp1.jar"/>
		 <delete quiet="true" file="${runner.jar}.tmp2.jar"/>
		 <delete quiet="true" file="${runner.jar}.conf"/>
-->
		<jar2exe jar="${runner.jar}" exe="${dist.dir}/${distro.name}.exe" icon="${ext.dir}/installer/install/application.ico" />
		<property name="runner.jar.abs" location="${runner.jar}" />
		<jar2sh jar="${runner.jar.abs}" output="${dist.dir}/${war.name}"/>
		<jar2app jar="${runner.jar}" appdir="${dist.dir}" icon="${cfdistro.basedir}/ext/izpack/dmg/icons/icon.icns" />
		<app2dmg app="${dist.dir}/${war.name}.app" appname="${war.name}.app" dmg="${dist.dir}/${war.name}.dmg" icon="${cfdistro.basedir}/ext/izpack/dmg/icons/icon.icns" />

		<move file="${runner.jar}" todir="${dist.dir}" />
		<delete dir="${runner.temp.dir}" />
	</target>

	<target name="wrappers">
		<jar2exe jar="${runner.jar}" exe="${dist.dir}/${distro.name}.exe" icon="${ext.dir}/installer/install/application.ico" />
		<property name="runner.jar.abs" location="${runner.jar}" />
		<jar2sh jar="${runner.jar.abs}" output="${dist.dir}/${war.name}"/>
		<jar2app jar="${runner.jar}" appdir="${dist.dir}" icon="${cfdistro.basedir}/ext/izpack/dmg/icons/icon.icns" />
		<app2dmg app="${dist.dir}/${war.name}.app" appname="${war.name}.app" dmg="${dist.dir}/${war.name}.dmg" icon="${cfdistro.basedir}/ext/izpack/dmg/icons/icon.icns" />
	</target>

	<macrodef name="jar2sh">
		<attribute name="jar" />
		<attribute name="output" />
		<sequential>
			<tar destfile="${dist.dir}/install.tar"
			     basedir="${runner.temp.dir}"
			     includes="${war.name}.jar"
			/>
			<gzip destfile="${dist.dir}/install.tar.gz" src="${dist.dir}/install.tar"/>
		  <echo file="${dist.dir}/install.sh" >SKIP=`awk '/^__ARCHIVE_FOLLOWS__/ { print NR + 1; exit 0; }' $0`
tail -n +$SKIP $0 | tar xzv
java -jar ${war.name}.jar
exit 0
__ARCHIVE_FOLLOWS__
</echo>
		  <concat destfile="${dist.dir}/install.sh" append="true">
		    <filelist dir="${dist.dir}" files="install.tar.gz"/>
		  </concat>
			
		</sequential>
	</macrodef>
	
	<macrodef name="open-url">
		<attribute name="url" />
		<sequential>
			<java classname="runwar.BrowserOpener" classpathref="runwar.lib.path" failonerror="true" fork="true">
				<arg value="@{url}" />
			</java>			
		</sequential>
	</macrodef>	

	<macrodef name="jar2exe">
		<attribute name="jar" />
		<attribute name="exe" />
		<attribute name="icon" />
		<sequential>
			<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask"
			    classpath="${cfdistro.basedir}/ext/launch4j/launch4j.jar:${cfdistro.basedir}/ext/launch4j/lib/xstream.jar" />
			<launch4j>
				<config dontWrapJar="false" headerType="gui" outFile="@{exe}" jar="@{jar}" errTitle="Install Error" cmdLine="" chdir="." downloadUrl="http://java.com/download" supportUrl="" customProcName="true" stayAlive="true" icon="@{icon}">
					<var>-Dappdir=&quot;&quot; </var>
					<jre path="./jre/" minVersion="1.5.0" maxVersion="" jdkPreference="">
					</jre>
					<versionInfo fileVersion="${product.version}" txtFileVersion="${product.version.txt}" fileDescription="${product.name.short} Windows Install" copyright="2009" productVersion="${product.version}" txtProductVersion="${product.version.txt}" productName="${product.name.short}" companyName="${company.name}" internalName="${war.name}.jar" originalFilename="${war.name}.exe" />
					<messages startupErr="An error occurred while starting the application." bundledJreErr="This application was configured to use a bundled Java Runtime Environment but the runtime is missing or corrupted." jreVersionErr="This application requires a Java Runtime Environment.\nAt least version" launcherErr="The registry refers to a nonexistent Java Runtime Environment installation or the runtime is corrupted." instanceAlreadyExistsMsg="An application instance is already running." />
				</config>
			</launch4j>
		</sequential>
	</macrodef>	

	<macrodef name="jar2app">
		<attribute name="jar" />
		<attribute name="appdir" />
		<attribute name="icon" />
		<sequential>
			<property name="jarbundler.jar" location="${cfdistro.basedir}/ext/izpack/dmg/lib/jarbundler-2.1.0.jar" />
			<property name="antfarm.jar" location="${cfdistro.basedir}/ext/izpack/dmg/lib/antfarm.jar" />
			<taskdef name="jarbundler"
	             classpath="${jarbundler.jar}" 
	             classname="net.sourceforge.jarbundler.JarBundler"/>

			<jarbundler dir="@{appdir}" verbose="true" showPlist="false"
	                name="${product.name.short}"
	                shortname="${product.name.short}"
	                signature="${product.name.short}"
	                stubfile="${war.name}"
				      jar="@{jar}"
				      mainclass="runwar.RunEmbeddedWar"
				      icon="@{icon}"
	                jvmversion="1.5+"
	                version="${product.version}"
	                infostring="${product.name.short}, ${copyright}"
	                build="${product.version}" bundleid="runwar.RunEmbeddedWar" >

				<!-- Adjust the look, feel and behavior
	      <javaproperty name="apple.laf.useScreenMenuBar" value="true"/>
	      <javaproperty name="apple.awt.brushMetal" value="true"/>
	      <javaproperty name="apple.awt.showGrowBox" value="false"/>
	       -->

				<!-- Associate document types with this application
				<documenttype name="CFML document"
	                    extensions="cfm cfc cfml" 
							        ostypes="TEXT sEXT ttro" 
	                    iconFile="icons/${ant.project.name}.icns"
	                    role="Editor"/>

				<documenttype name="CFEclipseCall properties file"
	                    extensions="eclipsecall" 
							        ostypes="TEXT sEXT ttro" 
	                    iconFile="icons/${ant.project.name}.icns"
	                    role="Editor"/>
				 -->

				<!-- Just proving we can included these files.  Might use them in About boxes
	      <resourcefilelist dir=".." files="LICENSE.TXT"/>
	       -->

				<!-- Copy the HelpBook JNI library 
	      <javafilelist dir="${basedir}/build" files="libHelpBookJNI.jnilib"/>
	       -->


				<!-- Copy the HelpBooks to the language specific folders            -->
				<!--  English will use the foldername and book name from the Bundle -->
				<!--  German or 'de' will use the custom folder name and book name  -->

				<!-- 
	      <HelpBook locale="English">
	      	<fileset dir="HelpBook/English" />
	      	<fileset dir="HelpBook/common" />
	      </HelpBook>
	   
	      <helpbook foldername="Hilfebuch" name="Hallo Welt Hilfe" locale="German">
	      	<fileset dir="HelpBook/German" />
	      	<fileset dir="HelpBook/common" />
	      </helpbook>

	      <helpbook name="Hjälp" locale="sv">
	      	<fileset dir="HelpBook/Swedish" />
	      	<fileset dir="HelpBook/common" />
	      </helpbook>
	-->


			</jarbundler>
		</sequential>
	</macrodef>	
	
	<target name="runwar.start.stop" description="starts and then stops jetty-runner server for some odd reason.  generation of stuff maybe?">
		<parallel>
			<sequential>
				<antcall target="runwar.start"/>
				<sleep seconds="5" />
				<antcall target="runwar.stop"/>
			</sequential>
		</parallel>
	</target>

	<target name="runwar.stop.start" description="starts and then stops jetty-runner server for some odd reason.  generation of stuff maybe?">
		<parallel>
			<sequential>
				<antcall target="runwar.stop"/>
				<sleep seconds="5" />
				<antcall target="runwar.start"/>
			</sequential>
		</parallel>
	</target>


</project>