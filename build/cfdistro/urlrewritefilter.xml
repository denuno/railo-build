<project name="urlrewritefilter" default="urlrewritefilter.update"
	basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<property name="urlrewritefilter.version" value="3.2.0" />

	<target name="urlrewritefilter.servlet.install" depends="exists.urlrewrite.xml">
		
		<property name="urlrewritefilter.log.level" value="WARN" />
		<property name="urlrewritefilter.reload.interval" value="-1" />
		<xmltask source="${war.target.dir}/WEB-INF/web.xml" dest="${war.target.dir}/WEB-INF/web.xml" outputter="simple">
			<insert path="web-app/servlet[1]" position="before">
				<![CDATA[
		        <filter>
		            <filter-name>UrlRewriteFilter</filter-name>
		            <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
		            <init-param>
		                <param-name>logLevel</param-name>
		                <param-value>${urlrewritefilter.log.level}</param-value>
		            </init-param>
			        <!-- set the amount of seconds the conf file will be checked for reload
			        can be a valid integer (0 denotes check every time,
			        -1 denotes no reload check, default -1) -->
			        <init-param>
			            <param-name>confReloadCheckInterval</param-name>
			            <param-value>${urlrewritefilter.reload.interval}</param-value>
			        </init-param>
		        </filter>
		        <filter-mapping>
		            <filter-name>UrlRewriteFilter</filter-name>
		            <url-pattern>/*</url-pattern>
					<dispatcher>REQUEST</dispatcher>
				<!--
			        <dispatcher>FORWARD</dispatcher>
				-->
		        </filter-mapping>
				]]>
			</insert>
		</xmltask>
		<!-- 
		<antcall target="urlrewritefilter.mappings.update"/>
		 -->
	</target>

	<macrodef name="urlrewrite">
		<attribute name="name" />
		<attribute name="from" />
		<attribute name="to" default="" />
		<attribute name="type" default="forward" />
		<attribute name="last" default="false" />
		<attribute name="enabled" default="true" />
		<attribute name="note" default="@{name}"/>
		<text name="rewritexml" optional="yes"/>
		<sequential>
			<echo message="rewrite: @{name} from: @{from} to: @{to}" />
			<antcontrib:var name="rule.exists" unset="true"/>
			<xmltask source="${war.target.dir}/WEB-INF/urlrewrite.xml"
				dest="${war.target.dir}/WEB-INF/urlrewrite.xml"
				outputter="simple">
				<xmlcatalog refId="commonDTDs"/>
				<print comment="existing url name" path="urlrewrite/rule[name='@{name}']"/>
				<copy path="urlrewrite/rule[name='@{name}']" attrValue="true" property="rule.exists"/>
				<replace path="urlrewrite/rule[name='@{name}']" if="rule.exists">
				<![CDATA[
		        <rule enabled="@{enabled}">
					<name>@{name}</name>
					<note>@{note}</note>
					@{rewritexml}
		            <from casesensitive="false">@{from}</from>
		            <to last="@{last}" type="@{type}">@{to}</to>
		        </rule>
				]]>
				</replace>
				<insert path="urlrewrite" position="under" unless="rule.exists">
				<![CDATA[
		        <rule enabled="@{enabled}">
					<name>@{name}</name>
					<note>@{note}</note>
					@{rewritexml}
		            <from casesensitive="false">@{from}</from>
		            <to last="@{last}" type="@{type}">@{to}</to>
		        </rule>
				]]>
				</insert>
			</xmltask>
		</sequential>
	</macrodef>
	
	<macrodef name="urlrewriteout">
		<attribute name="name" />
		<attribute name="from" />
		<attribute name="to" default="" />
		<attribute name="type" default="forward" />
		<attribute name="last" default="false" />
		<attribute name="enabled" default="true" />
		<attribute name="note" default="@{name}"/>
		<text name="rewritexml" optional="yes"/>

		<element name="args" optional="true" />
		<sequential>
			<antcontrib:var name="rule.exists" unset="true"/>
					<echo message="rewrite-outbound: @{name} from: @{from} to: @{to}" />
					<xmltask source="${war.target.dir}/WEB-INF/urlrewrite.xml"
						dest="${war.target.dir}/WEB-INF/urlrewrite.xml">
						<xmlcatalog refId="commonDTDs"/>
						<print comment="existing url name" path="urlrewrite/rule[name='@{name}']"/>
						<copy path="urlrewrite/rule[name='@{name}']" attrValue="true" property="rule.exists"/>
						<replace path="urlrewrite/rule[name='@{name}']" if="rule.exists">
						<![CDATA[
				        <outbound-rule enabled="@{enabled}">
							<name>@{name}</name>
							<note>@{note}</note>
							<from casesensitive="false">@{from}</from>
				            <to last="@{last}" type="@{type}">@{to}</to>
				        </outbound-rule>
						]]>
						</replace>
						<insert path="urlrewrite" position="under" unless="rule.exists">
						<![CDATA[
				        <outbound-rule enabled="@{enabled}">
							<name>@{name}</name>
							<note>@{note}</note>
				            <from casesensitive="false">@{from}</from>
				            <to last="@{last}" type="@{type}">@{to}</to>
				        </outbound-rule>
						]]>
						</insert>
					</xmltask>
		</sequential>
	</macrodef>
	
	<macrodef name="urlrewritexml">
		<attribute name="name" />
		<text name="rewritexml"/>
		<element name="args" optional="true" />
		<sequential>
			<antcontrib:var name="rule.exists" unset="true"/>
			<xmltask source="${war.target.dir}/WEB-INF/urlrewrite.xml"
				dest="${war.target.dir}/WEB-INF/urlrewrite.xml">
				<xmlcatalog refId="commonDTDs"/>
				<copy path="urlrewrite/rule[name='@{name}']" attrValue="true" property="rule.exists"/>
				<print path="urlrewrite/rule[name='@{name}']"/>
				<replace path="urlrewrite/rule[name='@{name}']" if="rule.exists">
					<![CDATA[@{rewritexml}]]>
				</replace>
				<insert path="urlrewrite" position="under" unless="rule.exists">
					<![CDATA[@{rewritexml}]]>
				</insert>
			</xmltask>
		</sequential>
	</macrodef>

	<target name="urlrewritefilter.mappings.update">
		<xmltask sourcebuffer="mappings.buff">
			<call path="mappings/*">
				<param name="virtual" path="@virtual" default="NONE" />
				<param name="physical" path="@physical" default="NONE" />
				<actions>
					<antcontrib:var name="rule.exists" unset="true"/>
					<echo message="@{virtual}" />
					<xmltask source="${war.target.dir}/WEB-INF/urlrewrite.xml"
						dest="${war.target.dir}/WEB-INF/urlrewrite.xml">
						<xmlcatalog refId="commonDTDs"/>
						<copy path="urlrewrite/rule[from='@{virtual}']" attrValue="true" property="rule.exists"/>
						<print path="urlrewrite/rule[from='@{virtual}']"/>
						<replace path="urlrewrite/rule[from='@{virtual}']" if="rule.exists">
						<![CDATA[
				        <rule>
				            <from casesensitive="false">@{virtual}(.*)</from>
				            <to>@{physical}$1</to>
				        </rule>
						]]>
						</replace>
						<insert path="urlrewrite" position="under" unless="rule.exists">
						<![CDATA[
				        <rule>
				            <from casesensitive="false">@{virtual}(.*)</from>
				            <to>@{physical}$1</to>
				        </rule>
						]]>
						</insert>
					</xmltask>
				</actions>
			</call>
		</xmltask>
	</target>	

	
	<target name="exists.urlrewrite.xml">
		<property name="urlrewrite.file" value="${basedir}/urlrewrite.xml" />
		<sanitizeContextPath/>
		<requires-ext resource="${ext.dir}/urlrewritefilter/"/>
		<available file="${basedir}/urlrewrite.${build.type}.xml" type="file" property="exists.urlrewrite.xml" />
		<antcontrib:if>
			<equals arg1="${exists.urlrewrite.xml}" arg2="true" />
			<then>
				<antcontrib:var name="${urlrewrite.file}" unset="true" />
				<property name="urlrewrite.file" location="${basedir}/urlrewrite.${build.type}.xml" />
			</then>
			<else>
				<available file="${urlrewrite.file}" type="file" property="exists.urlrewrite.xml" />
			</else>
		</antcontrib:if>
		<echo message="Using urlrewrite-${urlrewritefilter.version}" />
		<antcontrib:if>
			<equals arg1="${exists.urlrewrite.xml}" arg2="true" />
			<then>
				<copy todir="${war.target.dir}/WEB-INF/" overwrite="true">
					<fileset dir="${ext.dir}/urlrewritefilter/">
						<include name="**/*.xml" />
						<include name="**/urlrewrite-${urlrewritefilter.version}.jar" />
					</fileset>
				</copy>
				<copy todir="${war.target.dir}/WEB-INF/" overwrite="true" file="${urlrewrite.file}" verbose="true" />
			</then>
			<else>
				<echo message="No urlrewrite.xml to import : ${basedir}/urlrewrite.xml does not exist." />
				<copy todir="${war.target.dir}/WEB-INF/" overwrite="true">
					<fileset dir="${ext.dir}/urlrewritefilter/">
						<include name="**/*.xml" />
						<include name="**/urlrewrite-${urlrewritefilter.version}.jar" />
					</fileset>
				</copy>
			</else>
		</antcontrib:if>
	</target>
	
	<target name="urlrewritefilter.update">
		<property name="source-root" value="${cfdistro.basedir}/java/urlrewritefilter" />
		<property name="repository.URL" value="http://urlrewritefilter.googlecode.com/svn" />
		<java classname="org.tmatesoft.svn.cli.SVN" dir="${source-root}/../"
			fork="true">
			<arg value="export" />
			<arg value="--force" />
			<arg value="${repository.URL}/trunk/" />
			<classpath>
				<pathelement location="${cfdistro.basedir}/lib/ganymed.jar" />
				<pathelement location="${cfdistro.basedir}/lib/svnkit.jar" />
				<pathelement location="${cfdistro.basedir}/lib/svnkit-cli.jar" />
			</classpath>
		</java>
	</target>

</project>