<project name="build-maven" default="mvn.deploy.core" xmlns:antcontrib="antlib:net.sf.antcontrib" xmlns:artifact="antlib:org.apache.maven.artifact.ant" basedir=".">

   	<!-- 
   	<property name="mvn.type" value="snapshot" />
   	-->
	<property name="railo.deps.exclude" value="railo-loader.jar, javax.servlet.jar, org.mortbay.jetty.jar, ojdbc14.jar" />
	<property name="railo.deps.optional" value="ojdbc14.jar, microsoft-mssqlserver.jar, h2.jar, microsoft-sqljdbc.jar, mysql-connector-java-bin.jar, postgresql.jar" />

<property name="mvn.type" value="release" />
    <property name="mvn.repo.dest" value="local" />
    <property name="mvn.repo.dest" value="remote" />
    <property name="mvn.repo.id" value="mvn.repo.${mvn.repo.dest}" />
    <property name="maven.repo.local" location="${cfdistro.basedir}/artifacts" />

	<import file="${cfdistro.basedir}/maven.xml" />

	<mvn-repo id="mvn.repo.local" url="file://${maven.repo.local}/" />

	<!-- if we decide we want to do snapshots and whatnot.
	<mvn-repo id="mvn.repo.local" url="file://${maven.repo.local}/${mvn.type}/">
		<enablement>
			<releases enabled="false" updatePolicy="always" />
			<snapshots enabled="true" updatePolicy="never" checksumPolicy="fail" />
		</enablement>
	</mvn-repo>
 	-->

	<!-- default jre to use for building jre bundles -->
	<property name="mvn.jre.version" value="1.7.0_17" />
	<property name="mvn.jre.version" value="1.6.0_41" />
       	
  	<property name="mvn.remote.repo" 
   		value="http://127.0.0.1:8081/nexus/content/repositories/railo-${mvn.type}s/" />

    <target name="mvn.deploy.libs" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
		<set-build-info />
		<!-- wrap all the libs up into one dependency -->
		<zip destfile="${temp.dir}/railo-libs.zip" update="true">
			<fileset dir="${src.dir}/railo-java/libs" excludes="${railo.deps.exclude}" />
		</zip>
		<pom-and-deploy pomid="railolibs.pom" artifact="${temp.dir}/railo-libs.zip" packaging="zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.libs" version="${railo.build.version.major}.0" name="railo.libs" />
		<delete file="${temp.dir}/railo-libs.zip" />
		<!-- and what the hell, try adding all under one dependency -->
		<property name="libsxml" value="" />
		<property name="depsxml" value="" />
		<antcontrib:for param="file">
			<path>
				<fileset dir="${src.dir}/railo-java/libs" excludes="${railo.deps.exclude},${railo.deps.optional}" includes="*.jar" />
			</path>
			<sequential>
				<antcontrib:var name="basename" unset="true" />
				<basename file="@{file}" property="basename" suffix=".jar" />
				<antcontrib:propertyregex 
				property="basename" 
				input="${basename}" 
				global="true" override="yes" 
				regexp="\." 
				replace="-"/>
				<echo message="${basename}"/>
				<antcontrib:var name="libsxml"
					value='${libsxml}&lt;attach file="@{file}" classifier="${basename}" type="jar"/&gt;${line.separator}' />
				<antcontrib:var name="depsxml"
					value='${depsxml}&lt;dependency groupId="org.getrailo" artifactId="railo.dep" version="${railo.build.version.major}.0" classifier="${basename}"/&gt;${line.separator}' />
			</sequential>
		</antcontrib:for>
    	<!-- add optional libs -->
		<antcontrib:for param="file">
			<path>
				<fileset dir="${src.dir}/railo-java/libs" excludes="${railo.deps.exclude}" includes="${railo.deps.optional}" />
			</path>
			<sequential>
				<antcontrib:var name="basename" unset="true" />
				<basename file="@{file}" property="basename" suffix=".jar" />
				<antcontrib:propertyregex 
				property="basename" 
				input="${basename}" 
				global="true" override="yes" 
				regexp="\." 
				replace="-"/>
				<echo message="${basename}"/>
				<antcontrib:var name="libsxml"
					value='${libsxml}&lt;attach file="@{file}" classifier="${basename}" type="jar"/&gt;${line.separator}' />
				<antcontrib:var name="depsxml"
					value='${depsxml}&lt;dependency groupId="org.getrailo" artifactId="railo.dep" version="${railo.build.version.major}.0" classifier="${basename}" optional="true"/&gt;${line.separator}' />
			</sequential>
		</antcontrib:for>
		<echo file="${basedir}/build-mvnlibs.xml"><![CDATA[<project><import file="${basedir}/build.xml"/>
		<target name="libsxml.pom"><pom-and-deploy pomid="railo.dep.pom" packaging="pom" buildtype="${mvn.type}"
	 		groupId="org.getrailo" artifactId="railo.dep" version="${railo.build.version.major}.0" name="railo.dep">
       		<attachments>${libsxml}</attachments></pom-and-deploy>
       		<pom-and-deploy pomid="railo" artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" packaging="jar" buildtype="${mvn.type}"
	 		groupId="org.getrailo" artifactId="railo" version="${railo.build.version.long}" name="railo">
       		<dependencies>${depsxml}</dependencies></pom-and-deploy>
       		</target></project>]]></echo>
		<ant antfile="${basedir}/build-mvnlibs.xml" inheritAll="true" target="libsxml.pom" />
    	<delete file="${basedir}/build-mvnlibs.xml"/>
	</target>

    <target name="mvn.deploy.libs.min" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
		<set-build-info />
		<!-- wrap all the libs up into one dependency -->
		<zip destfile="${temp.dir}/railo-libs.mini.zip" update="true">
			<fileset dir="${src.dir}/railo-java/libs" excludes="${railo.libs.zip.excludes},${railo.mini.excludes}" />
		</zip>
		<pom-and-deploy pomid="railolibsmin.pom" artifact="${temp.dir}/railo-libs.mini.zip" packaging="zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.libs.min" version="${railo.build.version.major}.0" name="railo.libs.min" />
		<delete file="${temp.dir}/railo-libs.mini.zip" />
		<!-- and what the hell, try adding all under one dependency -->
		<property name="libsxml" value="" />
		<property name="depsxml" value="" />
		<antcontrib:for param="file">
			<path>
				<fileset dir="${src.dir}/railo-java/libs" excludes="${railo.libs.zip.excludes},${railo.mini.excludes}" includes="*.jar" />
			</path>
			<sequential>
				<antcontrib:var name="basename" unset="true" />
				<basename file="@{file}" property="basename" suffix=".jar" />
				<antcontrib:propertyregex 
				property="basename" 
				input="${basename}" 
				global="true" override="yes" 
				regexp="\." 
				replace="-"/>
				<echo message="${basename}"/>
				<antcontrib:var name="libsxml"
					value='${libsxml}&lt;attach file="@{file}" classifier="${basename}" type="jar"/&gt;${line.separator}' />
				<antcontrib:var name="depsxml"
					value='${depsxml}&lt;dependency groupId="org.getrailo" artifactId="railo.dep.min" version="${railo.build.version.major}.0" classifier="${basename}"/&gt;${line.separator}' />
			</sequential>
		</antcontrib:for>
		<echo file="${basedir}/build-mvnlibs.xml"><![CDATA[<project><import file="${basedir}/build.xml"/>
		<target name="libsxml.pom"><pom-and-deploy pomid="railo.dep.min.pom" packaging="pom" buildtype="${mvn.type}"
	 		groupId="org.getrailo" artifactId="railo.dep.min" version="${railo.build.version.major}.0" name="railo.dep.min">
       		<attachments>${libsxml}</attachments></pom-and-deploy>
       		<pom-and-deploy pomid="railo.min" artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" packaging="jar" buildtype="${mvn.type}"
	 		groupId="org.getrailo" artifactId="railo.min" version="${railo.build.version.long}" name="railo.min">
       		<dependencies>${depsxml}</dependencies></pom-and-deploy>
       		</target></project>]]></echo>
		<ant antfile="${basedir}/build-mvnlibs.xml" inheritAll="true" target="libsxml.pom" />
    	<delete file="${basedir}/build-mvnlibs.xml"/>
	</target>

    <target name="mvn.deploy.all" depends="mvn.deploy.libs,mvn.deploy.libs.min,mvn.deploy.core" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
		<pom-and-deploy pomid="railo.war.pom" packaging="war" artifact="${railobuild.dist.dir}/war/railo-${railo.build.version.long}.war" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.war" version="${railo.build.version.long}" name="railo.war"/>

    	<pom-and-deploy pomid="railo.express.pom" packaging="zip" artifact="${railobuild.dist.dir}/express/railo-express-${railo.build.version.long}.zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.express" version="${railo.build.version.long}" name="railo.express"/>

    	<pom-and-deploy pomid="railo.express.jetty.pom" packaging="zip" artifact="${railobuild.dist.dir}/express/railo-express-jetty-${railo.build.version.long}.zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.express.jetty" version="${railo.build.version.long}" name="railo.express.jetty"/>

    	<pom-and-deploy pomid="railo.express.winstone.pom" packaging="zip" artifact="${railobuild.dist.dir}/express/railo-express-winstone-${railo.build.version.long}.zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.express.winstone" version="${railo.build.version.long}" name="railo.express.winstone"/>

    	<pom-and-deploy pomid="railo.express.mini.pom" packaging="zip" artifact="${railobuild.dist.dir}/express/railo-mini-${railo.build.version.long}.zip" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo.express.mini" version="${railo.build.version.long}" name="railo.express.mini"/>
	</target>

	<target name="mvn.deploy.core" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
		<set-build-info />
		<!-- deploy the railo.jar file (railo.core) -->
		<pom-and-deploy pomid="railo.jar.pom" packaging="jar" artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" buildtype="${mvn.type}"
		 groupId="org.getrailo" artifactId="railo-jar" version="${railo.build.version.long}" name="railo-jar" />

		<pom-and-deploy pomid="railo.rc.pom" packaging="rc" 
			artifact="${railobuild.dist.dir}/rc/${railo.build.version.long}.rc" buildtype="${mvn.type}"
		 	groupId="org.getrailo" artifactId="railo-rc" version="${railo.build.version.long}" name="railo-rc">
		</pom-and-deploy>

		<!-- deploy the railo archtype-ish projects -->

		<copy file="${basedir}/resource/maven/railo.pomparent.pom" tofile="${temp.dir}/railo.pomparent.pom" overwrite="true">
			<filterchain><expandproperties /></filterchain>
		</copy>
		<pom-and-deploy pomid="railo.pomparent.pom" file="${temp.dir}/railo.pomparent.pom"  packaging="pom" buildtype="${mvn.type}"
			artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar"/>
		
		<copy file="${basedir}/resource/maven/railo.pomparent.libs.pom" tofile="${temp.dir}/railo.pomparent.libs.pom" overwrite="true">
			<filterchain><expandproperties /></filterchain>
		</copy>
		<pom-and-deploy pomid="rail.pomparent.libs.pom" file="${temp.dir}/railo.pomparent.libs.pom"  packaging="pom" buildtype="${mvn.type}"
			artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar"/>
		
		<copy file="${basedir}/resource/maven/railo.pomparent.war.pom" tofile="${temp.dir}/railo.pomparent.war.pom" overwrite="true">
			<filterchain><expandproperties /></filterchain>
		</copy>
		<pom-and-deploy pomid="railo.pomparent.war.pom" file="${temp.dir}/railo.pomparent.war.pom" buildtype="${mvn.type}"
		  artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" packaging="pom" />

		<copy file="${basedir}/resource/maven/railo.pomparent.jetty.pom" tofile="${temp.dir}/railo.pomparent.jetty.pom" overwrite="true">
			<filterchain><expandproperties /></filterchain>
		</copy>
		<pom-and-deploy pomid="railo.pomparent.jetty.pom" file="${temp.dir}/railo.pomparent.jetty.pom" packaging="pom"
			artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" buildtype="${mvn.type}" />

		<copy file="${basedir}/resource/maven/railo.pomparent.winstone.pom" tofile="${temp.dir}/railo.pomparent.winstone.pom" overwrite="true">
			<filterchain><expandproperties /></filterchain>
		</copy>
		<pom-and-deploy pomid="railo.pomparent.winstone.pom" file="${temp.dir}/railo.pomparent.winstone.pom" packaging="pom"
			artifact="${railobuild.dist.dir}/jar/railo-${railo.build.version.long}.jar" buildtype="${mvn.type}" />
	</target>

</project>
