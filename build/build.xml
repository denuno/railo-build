<project name="build-railo" default="build" basedir="./" xmlns:antcontrib="antlib:net.sf.antcontrib">

	<tstamp>
		<format property="todays.date" pattern="yyyy/MM/dd hh:mm:ss"/>
		<format property="todays.tstamp" pattern="MMddhhmm"/>
	</tstamp>
	<propertyfile file="${basedir}/buildinfo.properties" comment="Build Information">
		<entry key="build.date" type="date" pattern="MM-dd-yyyy HH:mm:ss" value="now" />
		<entry key="build.time" type="date" pattern="kk:mm:ss" value="now" />
		<entry key="build.timestamp" type="date" pattern="MM-dd-yyyy' at 'HH:mm:ss" value="now" />
		<entry key="build.lastcommithash" default="" />
	</propertyfile>
	<property file="${basedir}/buildinfo.properties" />
<!--
	<property name="jdk5.home" value="/System/Library/Frameworks/JavaVM.framework/Versions/1.5.0/Home/" />
-->
	<loadproperties srcfile="build.properties"/>
	<echo message="${todays.date}"/>

	<property name="railo.build.bump" value="revision" description="one of [major|minor|build|revision] or empty to not bump number." />
	<property name="railo.build.level" value="os"/>
	<property name="railo.build.state" value="source-build"/>
	<property name="railo.build.name" value="cfdistro-built"/>
	<property name="railobuild.dist.dir" value="../dist"/>
	<!-- don't change the password or charset! -->
	<property name="railo.password" value="testtest"/>
	<property name="server.charset" value="iso-8859-1" />
	<property name="server.host" value="localhost" />
	<property name="server.port.http" value="8088" />
	<property name="server.url" value="http://${server.host}:${server.port.http}/index.cfm" />
	<import file="${cfdistro.build.file}"/>
	
	<target name="build.branch">
		<echo message="WARNING:  This target requires git to be installed."/> 
		<input addproperty="branch" message="branch [ 3.2 | 3.3 | develop ] :"/>
		<antcontrib:var name="ext.railo.war.version" value="3.2.1.000" />
		<antcontrib:var name="railo.patch.version" value="3.3.0.027" />
		<antcontrib:switch value="${branch}">
		  <case value="develop">
			<antcontrib:var name="railo.build.version.long" value="4.0.000" />
		  </case>
		  <default>
			<antcontrib:var name="railo.build.version.long" value="${branch}.0.000" />
		  </default>
		</antcontrib:switch>
		<!--
		<git command="branch" dir="${src.dir}" />
		<echo message="${git.results}"/>
		<antcontrib:propertyregex override="yes" property="git.current.branch" input="${git.results}" 
			regexp=".*?\*\s(.*)?\s" select="\1" />
		-->
		<git command="fetch" dir="${src.dir}">
			<args>
				<arg value="origin" />
				<arg value="+refs/heads/*:refs/remotes/origin/*" />
			</args>
		</git>
		<!-- we have to use the system git as jgit has trouble with conflicts -->
		<git command="checkout" dir="${src.dir}" use-jgit="false">
			<args>
				<arg value="--force" />
				<arg value="origin/${branch}" />
			</args>
		</git>
		<antcontrib:runtarget target="build"/>
	</target>
	
	<target name="build" depends="src.to.mappings.xml,cfdistro.build">
		<antcontrib:runtarget target="scminfo"/>
		<mkdir dir="${railobuild.dist.dir}"/>
		<mapping physical="${src.dir}/railo-cfml" virtual="/railo-cfml"/>
		<property name="railo.javac.compiler" value="javac1.6"/>
		<property name="railo.url" value="http://${server.host}:${server.port.http}/railo-cfml/compileAdmin.cfm" />
		<echoproperties destfile="${temp.dir}/railo.properties" prefix="railo" />

		
		<antcontrib:propertyregex override="yes" property="railo.build.version.major" input="${railo.build.version.long}" 
			regexp="(\d).*" select="\1" />
		<antcontrib:if>
				<equals arg1="${railo.build.version.major}" arg2="4" />
			<then>
				<echo message="using 4.0 railo.jar and libs!" />
				<delete dir="${war.target.dir}/WEB-INF/lib" />
				<copy todir="${war.target.dir}/WEB-INF/lib">
					<fileset dir="${src.dir}/railo-java/libs" excludes="railo-loader.jar" />
				</copy>
				<copy file="${basedir}/resource/railo-4.0.jar" tofile="${war.target.dir}/WEB-INF/lib/railo.jar" />
			</then>
		</antcontrib:if>
		<sequential>
		   	<antcontrib:var name="server.memory.max" value="64M"/>
			<antcontrib:var name="server.jvm.args" value="-Xms${server.memory.max} -Xmx${server.memory.max} -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled -XX:PermSize=64m -XX:MaxPermSize=64m -Dsun.rmi.dgc.client.gcInterval=600000 -Dsun.rmi.dgc.server.gcInterval=600000 -Djava.net.preferIPv4Stack=true" />
				<antcontrib:runtarget target="server.start"/>
				<delete file="${src.dir}/railo-cfml/railo-admin/railo-context.ra"/>
				<antcontrib:trycatch property="foo" reference="bar">
					<try>
						<echo message="${cfdistro.basedir}/ant/bin/ant -buildfile ${src.dir}/railo-java/railo-master/build.xml -propertyfile ${temp.dir}/railo.properties" />
						<run-ant-build buildfile-dir="${src.dir}/railo-java/railo-master/" target="init" />
		
				    	<echo>*************************************</echo>
				    	<echo>***** Building railo-loader.jar *****</echo>
				    	<echo>*************************************</echo>
						<run-ant-build buildfile-dir="${src.dir}/railo-java/railo-loader/" target="install" />
				    	<echo>*************************************</echo>
				        <echo>***** Building Railo core.rc ********</echo>        
				    	<echo>*************************************</echo>
						<run-ant-build buildfile-dir="${src.dir}/railo-java/railo-core/" target="install" />
						<!-- at this point we have a successful build of the .rc file maybe -->
						<antcontrib:if>
							<not><available file="${src.dir}/railo-java/railo-core/dist/${railo.build.version.long}.rc"/></not> 
							<then><fail message="Something went south during the core build.  Can't go on.  We're dooooomed."/></then>
						</antcontrib:if>
						<antcontrib:if>
							<not><available file="${src.dir}/railo-cfml/railo-admin/railo-context.ra"/></not> 
							<then>
						    	<loadfile property="railo.compile_message" srcFile="${src.dir}/railo-java/railo-core/generate.html" />
								<fail message="Something went south during the admin context build.  Can't go on.  Game over man, game over!: ${railo.compile_message}"/>
							</then>
						</antcontrib:if>
						<echo>Moving ${railo.build.version.long}.rc to: ${railobuild.dist.dir}</echo>
						
						<!-- <copy file="${src.dir}/railo-cfml/railo-admin/railo-context.ra" todir="${railobuild.dist.dir}" /> -->
						<copy file="${src.dir}/railo-java/railo-core/dist/${railo.build.version.long}.rc" tofile="${src.dir}/railo-java/railo-core/dist/core.rc" />
						<move file="${src.dir}/railo-java/railo-core/dist/${railo.build.version.long}.rc" todir="${railobuild.dist.dir}" />
				    	<echo>*************************************</echo>
				        <echo>***** Building railo.jar ************</echo>
				    	<echo>*************************************</echo>
						<run-ant-build buildfile-dir="${src.dir}/railo-java/railo/" target="package" properties="-Dcore.dir=../railo-core/dist" />
						<copy file="${src.dir}/railo-java/railo/dist/railo.jar" tofile="${railobuild.dist.dir}/railo-${railo.build.version.long}.jar" />

						<echo>*************************************</echo>
				        <echo>***** Building railo.war ************</echo>
				    	<echo>*************************************</echo>
						<delete dir="${railobuild.dist.dir}/railo.war"/>
						<mkdir dir="${railobuild.dist.dir}/railo.war/WEB-INF/lib"/>
						<copy todir="${railobuild.dist.dir}/railo.war">
							<fileset dir="${basedir}/resource/railo-war-template" />
						</copy>
						<copy todir="${railobuild.dist.dir}/railo.war/WEB-INF/lib">
							<fileset dir="${src.dir}/railo-java/libs" excludes="railo-loader.jar" />
						</copy>
						<copy file="${railobuild.dist.dir}/railo-${railo.build.version.long}.jar" tofile="${railobuild.dist.dir}/railo.war/WEB-INF/lib/railo.jar" />
						<!-- compress war -->
						<mkdir dir="${railobuild.dist.dir}/compressed" />
						<jar jarfile="${railobuild.dist.dir}/compressed/railo-${railo.build.version.long}.war" basedir="${railobuild.dist.dir}/railo.war" />
						<delete dir="${railobuild.dist.dir}/railo.war" />
						<move file="${railobuild.dist.dir}/compressed/railo-${railo.build.version.long}.war" todir="${railobuild.dist.dir}" />
						<delete dir="${railobuild.dist.dir}/compressed" />
						<echo>*** WAR file exported to ${railobuild.dist.dir}/railo-${railo.build.version.long}.war ***</echo>
					</try>
					<catch>
						<echo message="Something bad happened while trying to build.  Gonna abort now, yo. Sorries."/>
						<echo>As property: ${foo}</echo>
						<!--
						<property name="baz" refid="bar" />
						<echo>From reference: ${baz}</echo>
						-->
						<antcontrib:runtarget target="server.stop"/>
						<fail message="error occurred running the builds" />
					</catch>
					</antcontrib:trycatch>			
				<antcontrib:runtarget target="server.stop"/>

			<copy file="${railobuild.dist.dir}/${railo.build.version.long}.rc" tofile="${railobuild.dist.dir}/${railo.build.version.long}.${build.lastcommithash}.rc"  failonerror="false"/>
			<move file="${railobuild.dist.dir}/commit.log" tofile="${railobuild.dist.dir}/commit.${build.lastcommithash}.log"  failonerror="false"/>
			<propertyfile file="${basedir}/buildinfo.properties" comment="Build Information">
				<entry key="build.lastcommithash" value="${build.commithash}" />
			</propertyfile>
			<antcontrib:if>
				<or>
				<equals arg1="${build.lastcommithash}" arg2="" />
				<equals arg1="${build.lastcommithash}" arg2="${build.commithash}" />
				</or>
				<then>
					<git command="log" dir="${src.dir}"><args><arg value="-n"/><arg value="10"/></args></git>
					<echo file="${railobuild.dist.dir}/commit.log">No prior builds.  Last 10 commits: 
${git.results}</echo>
				</then>
				<else>
					<git command="log" dir="${src.dir}"><args><arg value="${build.lastcommithash}..${build.commithash}"/><arg value="-n"/><arg value="50"/></args></git>
					<echo file="${railobuild.dist.dir}/commit.log">Commits since last build 
${build.lastcommithash}..${build.commithash}:
${git.results}</echo>
				</else>
			</antcontrib:if>

		</sequential>
	</target>

	<target name="build.32" depends="scminfo,get.jdk5.location,src.to.mappings.xml,cfdistro.build">
		<antcontrib:runtarget target="scminfo"/>
		<!-- add mappings -->
		<mapping physical="${src.dir}/railo-cfml" virtual="/railo-cfml"/>
		<property name="railo.url" value="http://${server.host}:${server.port.http}/railo-cfml/compileAdmin.cfm" />
		<echoproperties destfile="${temp.dir}/railo.properties" prefix="railo" />
		
		<sequential>
			<antcontrib:runtarget target="server.start"/>
			<echo message="${cfdistro.basedir}/ant/bin/ant -buildfile ${src.dir}/railo-java/railo-master/build.xml -propertyfile ${temp.dir}/railo.properties" />
			<exec dir="${src.dir}/railo-java/railo-master/" osfamily="unix"
            	executable="sh" failonerror="false">
	            <arg line="${cfdistro.basedir}/ant/bin/ant -buildfile build.xml -propertyfile ${temp.dir}/railo.properties"/>
	          <env key="JAVA_HOME" path="${jdk5.home}"/>
	        </exec>
			<exec dir="${src.dir}/railo-java/railo-master/" osfamily="windows"
				executable="${cfdistro.basedir}/ant/bin/ant.bat" failonerror="false">
				<arg line="-buildfile build.xml -propertyfile ${temp.dir}/railo.properties"/>
				<env key="JAVA_HOME" path="${jdk5.home}"/>
			</exec>
			<antcontrib:runtarget target="server.stop"/>
			<mkdir dir="${railobuild.dist.dir}"/>
			<move file="${src.dir}/railo-java/railo-core/dist/${railo.build.version.long}.rc" todir="${railobuild.dist.dir}" />
			<echo>Moving ${railo.build.version.long}.rc to: ${railobuild.dist.dir}</echo>
		</sequential>
	</target>
	
	
	<target name="makewar">
    	<echo>*************************************</echo>
        <echo>***** Building railo.war ************</echo>
    	<echo>*************************************</echo>
		<mkdir dir="${railobuild.dist.dir}/railo.war/WEB-INF/lib"/>
		<copy todir="${railobuild.dist.dir}/railo.war/WEB-INF">
			<fileset dir="${src.dir}/railo-java/railo-core/src/resource/config" includes="web.xml" />
		</copy>
		<copy todir="${railobuild.dist.dir}/railo.war/WEB-INF/lib">
			<fileset dir="${src.dir}/railo-java/libs" excludes="railo-loader.jar" />
		</copy>
		<copy file="${railobuild.dist.dir}/railo.jar" todir="${railobuild.dist.dir}/railo.war/WEB-INF/lib" />
	</target>

	<target name="set.build.info">
		<property file="${src.dir}/railo-java/railo-core/src/railo/runtime/Info.ini" prefix="railoini"/>
		<property name="railo.build.name-explanation" value="${railoini.name-explanation}"/>
		<version-splitter property="railo.build.version" version="${railoini.number}" bump="${railo.build.bump}"/>
		<antcontrib:inifile source="${src.dir}/railo-java/railo-core/src/railo/runtime/Info.ini" 
			dest="${src.dir}/railo-java/railo-core/src/railo/runtime/Info.ini">
			   <set section="version" property="release-date" value="${todays.date}" />
			   <set section="version" property="number" value="${railo.build.version.long}" />
			   <set section="version" property="level" value="${railo.build.level}" />
			   <set section="version" property="state" value="${railo.build.state}" />
			   <set section="version" property="name" value="Nightly (${build.commithash})" />
			   <set section="version" property="name-explanation" value="https://github.com/denuno/railo/commit/${build.commithash}" />
		</antcontrib:inifile>
	</target>
	
	<target name="scminfo">
		<git-currentbranch dir="${src.dir}"/>
		<git command="log" dir="${src.dir}"><args><arg value="-n"/><arg value="1"/></args></git>
		<antcontrib:propertyregex override="yes" property="commithash" input="${git.results}" regexp=".*commit\s(.\w+).*" select="\1" />
		<antcontrib:propertyregex override="yes" property="commitdate" input="${git.results}" regexp="(?ism).*Date:\s(.*\d+)" select="\1eee" />
		<antcontrib:propertyregex override="yes" property="commitmessage" input="${git.results}" regexp="(?im).*Date:\s(.*\d+)?(.*)+" select="rrr\2" />
		<echo message="${commithash}"/>
		<echo message="${commitmessage}"/>
		<echo message="${commitdate}"/>
		<property name="build.commithash" value="${commithash}" />
		<property name="build.lastcommithash" value="${commithash}" />
		<antcontrib:runtarget target="set.build.info"/>
    	<echo>*************************************</echo>
    	<echo>***** Building railo ${railo.build.version.long} (${commithash}) *****</echo>
    	<echo>*************************************</echo>
	</target>
	
	<target name="build.and.test" depends="build">
		<copy file="${railobuild.dist.dir}/${railo.build.version.long}.rc" todir="${war.target.dir}/WEB-INF/lib/railo-server/patches/" />
		<copy todir="${war.target.dir}/WEB-INF/railo/context/admin/plugin/">
			<fileset dir="${basedir}/../ci/extension/src/plugin/" />
		</copy>
		<requires-ext resource="${ext.railo.dir}/error.cfm"/>
		<copy file="${ext.railo.dir}/error.cfm" todir="${war.target.dir}/WEB-INF/lib/railo-server/context/library/tag" overwrite="true" />
		<copy file="${ext.railo.dir}/error.cfm" todir="${war.target.dir}/WEB-INF/railo/context/templates/error" overwrite="true" />
		<antcontrib:runtarget target="server.start"/>
		<antcontrib:runtarget target="server.openUrl"/>
		<echo message="The admin password is: testtest" />
		<echo message="to stop server, run: ./${distro.name}.sh server.stop" />
		<echo message="or on windows run: ${distro.name}.bat server.stop" />
		<echo message="or just: build/ant server.stop" />
	</target>
	
	<target name="ci.build">
		<antcontrib:propertyselector property="z1.list"
			delimiter="," match="(.*)" select="\1" override="true"
			distinct="true" casesensitive="false" />
		<removePropsByRegex regex="[^z]+.*"/>
		<property name="build.type" value="ci"/>
		<property name="basedir" location="."/>
		<load-buildtype-properties buildtype="ci" />
		<antcontrib:antfetch target="check.creds" inheritall="true" return="${z1.list}" />
		<antcontrib:runtarget target="cfdistro.build"/>
		<antcontrib:runtarget target="server.install"/>
		<echo file="${jboss.deploy.dir}/${war.name}.war.dodeploy" message="" />
	</target>

	<target name="ci.start">
		<antcontrib:propertyselector property="z1.list"
			delimiter="," match="(.*)" select="\1" override="true"
			distinct="true" casesensitive="false" />
		<removePropsByRegex regex="[^z]+.*"/>
		<property name="build.type" value="ci"/>
		<property name="basedir" location="."/>
		<load-buildtype-properties buildtype="ci" />
		<antcontrib:antfetch target="check.creds" inheritall="true" return="${z1.list}" />
		<antcontrib:if>
			<not><available file="${war.target.dir}" /></not>
			<then>
				<antcontrib:runtarget target="cfdistro.build"/>
				<antcontrib:runtarget target="set.mappings"/>
			</then>
		</antcontrib:if>
		<antcall target="server.start"/>
		<antcall target="server.openUrl"/>
		<copy todir="${war.target.dir}/WEB-INF/railo/context/admin/plugin/">
			<fileset dir="${basedir}/../ci/extension/src/plugin/" />
		</copy>
		<echo message="The admin password is: testtest" />
		<echo message="to stop server run: ./${distro.name}.sh ci.stop" />
		<echo message="or on windows run: ${distro.name}.bat ci.stop" />
		<echo message="or just: build/ant ci.stop" />
	</target>

	<target name="ci.stop">
		<load-buildtype-properties buildtype="ci" />
		<antcontrib:runtarget target="server.stop"/>
	</target>
	
	<macrodef name="run-ant-build">
		<attribute name="buildfile-dir"/>
		<attribute name="target" default="build"/>		
		<attribute name="properties" default=""/>		
		<sequential>
			<exec dir="@{buildfile-dir}" osfamily="unix"
            	executable="sh" failonerror="true">
	            <arg line="${cfdistro.basedir}/ant/bin/ant -buildfile build.xml -propertyfile ${temp.dir}/railo.properties -Dcore.version=${railo.build.version.long} -Dbuild.compiler=org.eclipse.jdt.core.JDTCompilerAdapter @{properties} @{target}"/>
	        </exec>
			<exec dir="@{buildfile-dir}" osfamily="windows"
				executable="${cfdistro.basedir}/ant/bin/ant.bat" failonerror="true">
				<arg line="-buildfile build.xml -propertyfile '${temp.dir}/railo.properties' -Dcore.version=${railo.build.version.long} -Dbuild.compiler=org.eclipse.jdt.core.JDTCompilerAdapter @{target}"/>
			</exec>
		</sequential>
	</macrodef>

	
</project>
